/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.stockviws;

import views.salesorderviws.*;
import controllers.ItemController;
import controllers.SearchCategoryController;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import utilities_new.Combosearch;
import views.itemviews.NewItem;

/**
 *
 * @author SHDINESH
 */
public class SelectPartForUpdateStocks extends javax.swing.JDialog {

    private DefaultTableModel selectedPartsDtm, selectPartsDtm;
    private SalesOrderPanel mainPanel;
    private Combosearch keySearch;

    /**
     * Creates new form SelectPart
     */
    public SelectPartForUpdateStocks(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public SelectPartForUpdateStocks(java.awt.Frame parent, boolean modal, DefaultTableModel dtm) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.selectedPartsDtm = dtm;
        //this.mainPanel = soPanel;

        try {
            selectPartsDtm = (DefaultTableModel) tblSelectItem.getModel();
            loadAllPartDataToSelect(selectPartsDtm);
            SearchCategoryController.fillSearchKeys(cmbSearchKeys);
        } catch (ClassNotFoundException classNotFoundException) {
        } catch (SQLException sQLException) {
        }
        keySearch = new Combosearch();
        keySearch.setSearchableCombo(cmbSearchKeys, true, "Key is not registered");
    }

    public void addNewItemsToTable() {
        int selectedRow = tblSelectItem.getSelectedRow();
        //String supplierName = (String) selectedPartsDtm.getSelectedItem();
        int itemID = Integer.parseInt(tblSelectItem.getValueAt(selectedRow, 0).toString());
        String itemName = tblSelectItem.getValueAt(selectedRow, 2).toString();
        String description = tblSelectItem.getValueAt(selectedRow, 3).toString();
        String itemQty = txtQty.getText().toString().trim();
        double sellingPrice = Double.parseDouble(txtSellingPrice.getText().toString());
        double buyingPrice = Double.parseDouble(txtBuyingPrice.getText().toString());
        int status = 0;
        if (itemQty == null || "".equals(itemQty) || itemQty.isEmpty() || "0".equals(itemQty)) {
            JOptionPane.showMessageDialog(this, "Quantity cannot 0 or empty.", "Incorrect quantity", JOptionPane.WARNING_MESSAGE);

        } else {
            Object obj[] = new Object[9];
            obj[0] = itemID;
            obj[1] = itemName;
            obj[2] = description;
            obj[3] = itemQty;
            obj[4] = itemQty;
            obj[5] = buyingPrice;
            obj[6] = sellingPrice;
            obj[7] = status;
            obj[8] = status;
            selectedPartsDtm.addRow(obj);

            clearFields();
            dispose();
        }

    }

    public void loadAllPartDataToSelect(DefaultTableModel allPartsDtm) throws ClassNotFoundException, SQLException {
        ResultSet data = ItemController.getAllPartDataToSelect1();
        String tableRow[] = new String[12];
        int rowCount = allPartsDtm.getRowCount();
        if (rowCount >= 0) {
            allPartsDtm.setRowCount(0);
        }

        while (data.next()) {
            for (int i = 0; i < 12; i++) {
                if (i == 11) {
                    tableRow[i] = "All";
                } else {
                    tableRow[i] = data.getString(i + 1);
                }

            }
            allPartsDtm.addRow(tableRow);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        cmbSearchKeys = new javax.swing.JComboBox();
        txtPartSearch = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSelectItem = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        txtQty = new javax.swing.JTextField();
        lblQty = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBuyingPrice = new javax.swing.JTextField();
        txtSellingPrice = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("All Parts");
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        cmbSearchKeys.setEditable(true);
        cmbSearchKeys.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbSearchKeysPopupMenuWillBecomeInvisible(evt);
            }
        });
        cmbSearchKeys.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbSearchKeysKeyReleased(evt);
            }
        });

        txtPartSearch.setText("Search...");
        txtPartSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartSearchActionPerformed(evt);
            }
        });
        txtPartSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPartSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartSearchFocusLost(evt);
            }
        });
        txtPartSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPartSearchKeyReleased(evt);
            }
        });

        jButton3.setText("New Part");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbSearchKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPartSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSearchKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPartSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbSearchKeys, txtPartSearch});

        tblSelectItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        tblSelectItem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblSelectItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "part id", "Brand", "Part No", "Description", "Selling Price", "current price", "Category", "Model", "Supplier", "Re Order Qty", "Remaining Qty", "All"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectItem.setRowHeight(20);
        tblSelectItem.setRowMargin(2);
        tblSelectItem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSelectItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSelectItemKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSelectItem);
        if (tblSelectItem.getColumnModel().getColumnCount() > 0) {
            tblSelectItem.getColumnModel().getColumn(0).setMinWidth(0);
            tblSelectItem.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblSelectItem.getColumnModel().getColumn(0).setMaxWidth(0);
            tblSelectItem.getColumnModel().getColumn(3).setMinWidth(100);
            tblSelectItem.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblSelectItem.getColumnModel().getColumn(3).setMaxWidth(100);
            tblSelectItem.getColumnModel().getColumn(11).setMinWidth(0);
            tblSelectItem.getColumnModel().getColumn(11).setPreferredWidth(0);
            tblSelectItem.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtQty.setText("0");
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        txtQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQtyFocusGained(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        lblQty.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblQty.setText("Quantity :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Buying Price:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Selling Price:");

        txtBuyingPrice.setText("0.00");
        txtBuyingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyingPriceActionPerformed(evt);
            }
        });
        txtBuyingPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuyingPriceFocusGained(evt);
            }
        });

        txtSellingPrice.setText("0.00");
        txtSellingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellingPriceActionPerformed(evt);
            }
        });
        txtSellingPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSellingPriceFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQty, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtBuyingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtBuyingPrice, txtQty, txtSellingPrice});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQty, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBuyingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtBuyingPrice, txtQty, txtSellingPrice});

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        txtBuyingPrice.requestFocus();

    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtQtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusGained
        txtQty.selectAll();
    }//GEN-LAST:event_txtQtyFocusGained

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
//        ValidateValues.validateTextFieldForNumber(txtQty);
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            btnAddToTable.requestFocus();
//        }
    }//GEN-LAST:event_txtQtyKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtPartSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartSearchKeyReleased
        try {
            final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(selectPartsDtm);
            tblSelectItem.setRowSorter(sorter);
            sorter.setRowFilter(RowFilter.regexFilter(("(?i)" + txtPartSearch.getText())));
            int keyCode = evt.getKeyCode();

            if (keyCode == KeyEvent.VK_DOWN) {
                tblSelectItem.requestFocus();
                tblSelectItem.changeSelection(0, 0, false, false);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPartSearchKeyReleased

    private void cmbSearchKeysKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbSearchKeysKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchKeysKeyReleased

    private void cmbSearchKeysPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbSearchKeysPopupMenuWillBecomeInvisible
        String selectedItem = cmbSearchKeys.getSelectedItem().toString();

        try {

            final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(selectPartsDtm);
            tblSelectItem.setRowSorter(sorter);
            sorter.setRowFilter(RowFilter.regexFilter(("(?i)" + selectedItem)));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbSearchKeysPopupMenuWillBecomeInvisible

    private void tblSelectItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSelectItemKeyReleased
        int keyCode = evt.getKeyCode();
        if (keyCode == KeyEvent.VK_ENTER) {
            tblSelectItem.requestFocus(false);
            tblSelectItem.changeSelection(tblSelectItem.getSelectedRow() - 1, 0, false, false);
            txtQty.requestFocus();
        }
    }//GEN-LAST:event_tblSelectItemKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            addNewItemsToTable();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Check your values again.", "Incorrect value", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Please select a part to add", "No selection", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPartSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartSearchFocusLost
        txtPartSearch.setText("Search...");
    }//GEN-LAST:event_txtPartSearchFocusLost

    private void txtPartSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartSearchFocusGained
        txtPartSearch.setText("");
    }//GEN-LAST:event_txtPartSearchFocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            NewItem newItem = new NewItem(null, true);
            newItem.setVisible(true);
            loadAllPartDataToSelect(selectPartsDtm);
        } catch (ClassNotFoundException classNotFoundException) {
        } catch (SQLException sQLException) {
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtPartSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartSearchActionPerformed

    private void txtSellingPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSellingPriceFocusGained
        txtSellingPrice.selectAll();
    }//GEN-LAST:event_txtSellingPriceFocusGained

    private void txtSellingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellingPriceActionPerformed
        jButton1.doClick();
    }//GEN-LAST:event_txtSellingPriceActionPerformed

    private void txtBuyingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyingPriceActionPerformed
        txtSellingPrice.requestFocus();
    }//GEN-LAST:event_txtBuyingPriceActionPerformed

    private void txtBuyingPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuyingPriceFocusGained
        txtBuyingPrice.selectAll();
    }//GEN-LAST:event_txtBuyingPriceFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectPartForUpdateStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectPartForUpdateStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectPartForUpdateStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectPartForUpdateStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SelectPartForUpdateStocks dialog = new SelectPartForUpdateStocks(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbSearchKeys;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQty;
    private javax.swing.JTable tblSelectItem;
    private javax.swing.JTextField txtBuyingPrice;
    private javax.swing.JTextField txtPartSearch;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSellingPrice;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        txtPartSearch.setText("");
        txtQty.setText("0");
    }
}
