/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package views.stockviws;

import controllers.DIMOPartsReturnController;
import controllers.StockController;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.DIMOStockReturn;
import models.DIMOStockReturnDetails;

/**
 *
 * @author user-pc
 */
public class DIMOPartsStockReturns extends javax.swing.JDialog {
       private DefaultTableModel DIMORetTableModel;
    private int stockID,itemID;
    /**
     * Creates new form DIMOPartsStockReturns
     */
    public DIMOPartsStockReturns(java.awt.Frame parent, boolean modal,int stockID) {
        
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
          DIMORetTableModel = (DefaultTableModel) tblDIMOPartsReturn.getModel();
        
        try {
            StockController.loadAllOtherStockDetails(stockID, DIMORetTableModel);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
        }
    }

    
    
    public void addNewDIMOStockReturn ()throws ClassNotFoundException, SQLException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String returnDate = sdf.format(new Date());
        sdf.applyPattern("HH:mm:ss");
        String returnTime = sdf.format(new Date());
        double returnAmount = Double.parseDouble(txtDIMORetAmount.getText());
        int other_returnStatus = 0;
        int status = 1;
        
        DIMOStockReturn sr = new DIMOStockReturn();
       // cr.setRetNumber(returnNo);
        sr.setReturnAmount(returnAmount);
        sr.setAddedDate(returnDate);
        sr.setAddedTime(returnTime);
       sr.setStatus(status);
       sr.setDimoReturnStatus(other_returnStatus);
       
        int rowCount = tblDIMOPartsReturn.getRowCount();
        ArrayList<DIMOStockReturnDetails> crDetailList = new ArrayList<>();
       for (int i = 0; i < rowCount; i++) {
            Object isReturnO = tblDIMOPartsReturn.getValueAt(i, 6);
            boolean isReturn = Boolean.parseBoolean((isReturnO != null && !isReturnO.toString().isEmpty() ? isReturnO.toString() : "0"));
            if (isReturn) {
                int StockID = Integer.parseInt(tblDIMOPartsReturn.getValueAt(i, 0).toString());
                int ItemID = Integer.parseInt(tblDIMOPartsReturn.getValueAt(i, 1).toString());
                int returnQuantity = Integer.parseInt(tblDIMOPartsReturn.getValueAt(i, 7).toString());
                int Quantity = Integer.parseInt(tblDIMOPartsReturn.getValueAt(i, 4).toString());
                int actualqty=0;
                actualqty=Quantity-returnQuantity;
              
                double buyingPrice = Double.parseDouble(tblDIMOPartsReturn.getValueAt(i, 5).toString());
                int status2=1;
               
               // OtherSupplierReturnDetail crDetail = new OtherSupplierReturnDetail(StockID, ItemID,returnQuantity,buyingPrice,status);
               DIMOStockReturnDetails crDetail = new DIMOStockReturnDetails(StockID, ItemID, buyingPrice, returnQuantity, status); 
                crDetailList.add(crDetail);
                
            DIMOStockReturnDetails stockupdate = new DIMOStockReturnDetails(StockID,  ItemID, actualqty);

            DIMOPartsReturnController.updateStock(stockupdate);
            }
        }
        boolean isAdded = DIMOPartsReturnController.addDIMOPartsReturnController(sr, crDetailList);
        if (isAdded) {
            
           // OtherSupplierReturn.updateDebtsOnReturn(StockID, Double.parseDouble(String.format("%.2f", totalReturnAmount)));
            JOptionPane.showMessageDialog(this, "Returns added successfully.", "Succeeded", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "An error occured while adding returns", "Error", JOptionPane.INFORMATION_MESSAGE);

        }
    }
    
    private DIMOPartsStockReturns(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDIMOPartsReturn = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnDIMOPartsRetAdd = new javax.swing.JButton();
        txtDIMORetAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblDIMOPartsReturn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "stockID", "ItemID", "partNO", "Description", "Quantity", "Buying Price(RS)", "Return", "Return QTY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDIMOPartsReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDIMOPartsReturnKeyReleased(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDIMOPartsReturnKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDIMOPartsReturn);
        if (tblDIMOPartsReturn.getColumnModel().getColumnCount() > 0) {
            tblDIMOPartsReturn.getColumnModel().getColumn(0).setMinWidth(0);
            tblDIMOPartsReturn.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblDIMOPartsReturn.getColumnModel().getColumn(0).setMaxWidth(0);
            tblDIMOPartsReturn.getColumnModel().getColumn(1).setMinWidth(0);
            tblDIMOPartsReturn.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblDIMOPartsReturn.getColumnModel().getColumn(1).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel1.setText("Return Amount:");

        btnDIMOPartsRetAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDIMOPartsRetAdd.setText("DIMO Parts Return");
        btnDIMOPartsRetAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDIMOPartsRetAddActionPerformed(evt);
            }
        });

        txtDIMORetAmount.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDIMORetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(btnDIMOPartsRetAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDIMOPartsRetAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDIMORetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDIMOPartsRetAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDIMOPartsRetAddActionPerformed
          try {
            addNewDIMOStockReturn();
        } catch (ClassNotFoundException ex) {
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDIMOPartsRetAddActionPerformed

    private void tblDIMOPartsReturnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDIMOPartsReturnKeyReleased
        int rowCount = tblDIMOPartsReturn.getRowCount();

        double totalReturnAmount = 0;
        for (int i = 0; i < rowCount; i++) {
            //getdata values in column...
            Object object = tblDIMOPartsReturn.getValueAt(i, 6);
                     
//            boolean isReturn = Boolean.parseBoolean(value);
            if (object != null) {
                String ret = tblDIMOPartsReturn.getValueAt(i, 7).toString();
                double retQty = Double.parseDouble((ret != null && !ret.isEmpty() ? ret : "0"));
                
                String inv =tblDIMOPartsReturn.getValueAt(i, 4).toString();
                double invQty = Double.parseDouble((inv !=null && !inv.isEmpty() ? inv : "0"));
                
                String invA = tblDIMOPartsReturn.getValueAt(i, 5).toString();
                double invAmount = Double.parseDouble((invA !=null && !invA.isEmpty() ? invA : "0"));

                totalReturnAmount += invAmount * retQty;
                System.out.println(totalReturnAmount);
            }
        }
        txtDIMORetAmount.setText(String.format("%.2f", totalReturnAmount));  
    }//GEN-LAST:event_tblDIMOPartsReturnKeyReleased

    private void tblDIMOPartsReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDIMOPartsReturnKeyPressed
              int rowCount = tblDIMOPartsReturn.getRowCount();

        double totalReturnAmount = 0;
        for (int i = 0; i < rowCount; i++) {
            //getdata values in column...
            Object object = tblDIMOPartsReturn.getValueAt(i, 6);
                     
//            boolean isReturn = Boolean.parseBoolean(value);
            if (object != null) {
                String ret = tblDIMOPartsReturn.getValueAt(i, 7).toString();
                double retQty = Double.parseDouble((ret != null && !ret.isEmpty() ? ret : "0"));
                
                String inv =tblDIMOPartsReturn.getValueAt(i, 4).toString();
                double invQty = Double.parseDouble((inv !=null && !inv.isEmpty() ? inv : "0"));
                
                String invA = tblDIMOPartsReturn.getValueAt(i, 5).toString();
                double invAmount = Double.parseDouble((invA !=null && !invA.isEmpty() ? invA : "0"));

                totalReturnAmount += invAmount * retQty;
                System.out.println(totalReturnAmount);
            }
        }
        txtDIMORetAmount.setText(String.format("%.2f", totalReturnAmount)); 
    }//GEN-LAST:event_tblDIMOPartsReturnKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DIMOPartsStockReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DIMOPartsStockReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DIMOPartsStockReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DIMOPartsStockReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DIMOPartsStockReturns dialog = new DIMOPartsStockReturns(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDIMOPartsRetAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDIMOPartsReturn;
    private javax.swing.JTextField txtDIMORetAmount;
    // End of variables declaration//GEN-END:variables
}
